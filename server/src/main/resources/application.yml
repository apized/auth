micronaut:
  application:
    name: Auth Server

  server:
    port: ${PORT:80}
    cors:
      enabled: true
      configurations:
        all:
          allowed-origins-regex: '^https?:\/\/.*$'

  otel:
    enabled: ${OTEL_ENABLED:false}

  router:
    static-resources:
      swagger:
        paths: classpath:META-INF/swagger
        mapping: /swagger/**
      swagger-ui:
        paths: classpath:META-INF/swagger/views/swagger-ui
        mapping: /swagger-ui/**
      redoc:
        paths: classpath:META-INF/swagger/views/redoc
        mapping: /redoc/**

endpoints:
  all:
    port: ${MANAGEMENT_PORT:8080}
  health:
    details-visible: ANONYMOUS
    enabled: true
    sensitive: false
  info:
    enabled: false
  routes:
    enabled: true
    sensitive: false
  threaddump:
    enabled: false
  flyway:
    enabled: false
  beans:
    enabled: false
  refresh:
    enabled: false

flyway:
  datasources:
    default:
      enabled: true

netty:
  default:
    allocator:
      max-order: 3

datasources:
  default:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:apized_auth}
    username: ${DB_USER:postgres}
    password: ${DB_PASS:postgres}

otel:
  traces:
    exporter: otlp
  metrics:
    exporter: otlp
  logs:
    exporter: otlp
  exporter:
    otlp:
      endpoint: ${OTEL_ENDPOINT:`https://otel.example.com`}
      headers: ${OTEL_HEADERS:}
      compression: ${OTEL_COMPRESSION:gzip}
      key: ${OTEL_KEY:}
      instance: ${HOSTNAME:local}
    experimental:
      expoter:
        otlp:
          retry:
            enabled: true
    metric:
      export:
        interval: 5000
    resource:
      attributes: "service.instance.id=${HOSTNAME:local}"

  exclusions:
    - /health.*
    - /sample/.*
    - /swagger.*

apized:
  slug: auth

auth:
  token:
    duration: ${AUTH_DURATION:3600}
    secret: ${AUTH_SECRET:boatymcboatface}
  cookie:
    domain: ${AUTH_DOMAIN:apized.org}
    secure: ${AUTH_SECURE:true}

sendgrid:
  api-key: ${SENDGRID_API_KEY:}
  from: ${SENDGRID_API_FROM:}
  templates:
    user-verification: ${SENDGRID_USER_VERIFICATION_TEMPLATE:}
    password-reset: ${SENDGRID_PASSWORD_RESET_TEMPLATE:}
